{"version":3,"file":"angular-checklist.js","sources":["../../../projects/angular-checklist/src/lib/checklist.directive.ts","../../../projects/angular-checklist/src/lib/checklist.module.ts","../../../projects/angular-checklist/src/public-api.ts","../../../projects/angular-checklist/src/angular-checklist.ts"],"sourcesContent":["import { Directive, EventEmitter, HostBinding, HostListener, Input, OnChanges, Output } from '@angular/core';\n\n@Directive({\n  selector: '[checklist]'\n})\nexport class ChecklistDirective implements OnChanges {\n\n  @Input() checklist: any[];\n  @Input() checklistValue: any;\n  @Input() maxSelectedItems = -1;\n  @Output() checklistChange = new EventEmitter<any[]>();\n  @HostBinding('checked') isChecked: boolean;\n\n  ////////////\n\n  ngOnChanges() {\n    const checklist = this.checklist || [];\n    this.isChecked = checklist.indexOf(this.checklistValue) >= 0;\n  }\n\n  @HostListener('change', [ '$event.target' ]) triggerOnChange(target: HTMLInputElement) {\n    let updatedList;\n    const checklist = this.checklist || [];\n\n    if (target && target.checked) {\n      if (this.maxSelectedItems === -1 || checklist.length < this.maxSelectedItems) {\n        updatedList = [ ...checklist, this.checklistValue ];\n        this.checklistChange.emit(updatedList);\n      } else {\n        target.checked = false;\n      }\n    } else {\n      const i = checklist.indexOf(this.checklistValue);\n      updatedList = [ ...checklist.slice(0, i), ...checklist.slice(i + 1) ];\n      this.checklistChange.emit(updatedList);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChecklistDirective } from './checklist.directive';\n\n\n@NgModule({\n  declarations: [\n    ChecklistDirective,\n  ],\n  imports: [],\n  exports: [\n    ChecklistDirective,\n  ]\n})\nexport class ChecklistModule {\n}\n","/*\n * Public API Surface of angular-checklist\n */\n\nexport * from './lib/checklist.directive';\nexport * from './lib/checklist.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;MAKa,kBAAkB;IAH/B;QAOW,qBAAgB,GAAG,CAAC,CAAC,CAAC;QACrB,oBAAe,GAAG,IAAI,YAAY,EAAS,CAAC;KA4BvD;;IAvBC,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KAC9D;IAE4C,eAAe,CAAC,MAAwB;QACnF,IAAI,WAAW,CAAC;QAChB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QAEvC,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;YAC5B,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE;gBAC5E,WAAW,GAAG,CAAE,GAAG,SAAS,EAAE,IAAI,CAAC,cAAc,CAAE,CAAC;gBACpD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACxC;iBAAM;gBACL,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;SACF;aAAM;YACL,MAAM,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACjD,WAAW,GAAG,CAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC;YACtE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxC;KACF;;;YAlCF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;aACxB;;;wBAGE,KAAK;6BACL,KAAK;+BACL,KAAK;8BACL,MAAM;wBACN,WAAW,SAAC,SAAS;8BASrB,YAAY,SAAC,QAAQ,EAAE,CAAE,eAAe,CAAE;;;MCPhC,eAAe;;;YAT3B,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,kBAAkB;iBACnB;gBACD,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE;oBACP,kBAAkB;iBACnB;aACF;;;ACZD;;;;ACAA;;;;;;"}