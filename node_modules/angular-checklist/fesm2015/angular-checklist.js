import { EventEmitter, Directive, Input, Output, HostBinding, HostListener, NgModule } from '@angular/core';

class ChecklistDirective {
    constructor() {
        this.maxSelectedItems = -1;
        this.checklistChange = new EventEmitter();
    }
    ////////////
    ngOnChanges() {
        const checklist = this.checklist || [];
        this.isChecked = checklist.indexOf(this.checklistValue) >= 0;
    }
    triggerOnChange(target) {
        let updatedList;
        const checklist = this.checklist || [];
        if (target && target.checked) {
            if (this.maxSelectedItems === -1 || checklist.length < this.maxSelectedItems) {
                updatedList = [...checklist, this.checklistValue];
                this.checklistChange.emit(updatedList);
            }
            else {
                target.checked = false;
            }
        }
        else {
            const i = checklist.indexOf(this.checklistValue);
            updatedList = [...checklist.slice(0, i), ...checklist.slice(i + 1)];
            this.checklistChange.emit(updatedList);
        }
    }
}
ChecklistDirective.decorators = [
    { type: Directive, args: [{
                selector: '[checklist]'
            },] }
];
ChecklistDirective.propDecorators = {
    checklist: [{ type: Input }],
    checklistValue: [{ type: Input }],
    maxSelectedItems: [{ type: Input }],
    checklistChange: [{ type: Output }],
    isChecked: [{ type: HostBinding, args: ['checked',] }],
    triggerOnChange: [{ type: HostListener, args: ['change', ['$event.target'],] }]
};

class ChecklistModule {
}
ChecklistModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ChecklistDirective,
                ],
                imports: [],
                exports: [
                    ChecklistDirective,
                ]
            },] }
];

/*
 * Public API Surface of angular-checklist
 */

/**
 * Generated bundle index. Do not edit.
 */

export { ChecklistDirective, ChecklistModule };
//# sourceMappingURL=angular-checklist.js.map
