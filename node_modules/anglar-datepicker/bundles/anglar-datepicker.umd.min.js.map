{"version":3,"sources":["ng://anglar-datepicker/lib/datepicker.service.ts","ng://anglar-datepicker/lib/datepicker.component.ts","ng://anglar-datepicker/lib/datepicker.module.ts"],"names":["moment","_moment","DatepickerService","this","months","value","label","prototype","generateMonthDate","month","year","day","Number","format","arguments","getMonths","dateComposer","startDay","lastDay","composed","dayCounter","counter","dayPointer","weekObj","week","push","getMonthDates","totalDays","getYear","Date","getFullYear","getYears","years","i","getDateFormatted","date","getDateMoment","getMonth","y","Injectable","args","providedIn","DatepickerComponent","datePickerService","changeDetect","position","dateFormat","pickerHeight","onDateSelect","EventEmitter","inputOffset","positioned","hide","myInput","ngOnInit","items","genCalendarView","document","body","appendChild","pickerCompRef","nativeElement","detectChanges","positionBody","positionElement","openPicker","writeValue","registerOnChange","fn","onChange","registerOnTouched","onBlur","dropdownItem","elementTop","elementLeft","getPosition","rect","pickerInput","getBoundingClientRect","scrollTop","documentElement","scrollLeft","top","left","ngOnDestroy","outerHTML","onDateSelection","selectedDate","dateObj","formattedDate","dateObject","emit","closePicker","e","console","error","gotoPrevMonth","gotoNextMonth","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","providers","provide","NG_VALUE_ACCESSOR","useExisting","multi","ChangeDetectorRef","Input","Output","ViewChild","AngularDatepickerModule","NgModule","declarations","imports","FormsModule","ReactiveFormsModule","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport * as _moment from 'moment';\nconst moment = _moment;\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class DatepickerService {\n\n    months = [\n        {value: 1, label: 'Jan'},\n        {value: 2, label: 'Feb'},\n        {value: 3, label: 'Mar'},\n        {value: 4, label: 'Apr'},\n        {value: 5, label: 'May'},\n        {value: 6, label: 'Jun'},\n        {value: 7, label: 'Jul'},\n        {value: 8, label: 'Aug'},\n        {value: 9, label: 'Sep'},\n        {value: 10, label: 'Oct'},\n        {value: 11, label: 'Nov'},\n        {value: 12, label: 'Dec'},\n    ];\n    constructor() {\n    }\n\n    generateMonthDate(month, year) {\n        if(month < 10) {\n            month = '0'+month;\n        }\n        let day: any = Number(moment(year + '-' +  month + '-01T00:00:00').format('d'));\n        if(day === 'Invalid date') {\n           throw \"Looks like something went wrong with day Generation\" + arguments[0] + arguments[1];\n        }\n        return day;\n    }\n\n    getMonths() {\n        return this.months;\n    }\n\n    dateComposer(startDay, lastDay) {\n        let composed = [];\n        let dayCounter = 0;\n        let counter = 0;\n        let dayPointer = 0;\n        let weekObj = {'week': []};\n        while(dayCounter <= lastDay || dayPointer <= 6) {\n            counter++;\n            if(dayPointer > 6) {\n                dayPointer = 0;\n            }\n            if(startDay === dayPointer || dayCounter > 0) {\n                dayCounter++;\n            }\n            weekObj['week'].push({\n                day: (dayCounter <= lastDay && dayCounter > 0) ? dayCounter : '' \n            });\n\n            dayPointer++;\n\n            if(dayPointer > 6) {\n                composed.push(weekObj);\n                weekObj = {'week': []};\n            }      \n            \n            if(counter > 50) {\n                throw \"While Loop exceeding the allowed limit !!!!\" + arguments[0] + arguments[1];\n            } \n        }\n        return composed;\n    }\n\n    getMonthDates(month: number, year: number) {\n        let totalDays = 0;\n        month = Number(month);\n        year = Number(year);\n        switch (month) {\n            case 1:\n            case 3:\n            case 5:\n            case 7:\n            case 8:\n            case 10:\n            case 12:\n                totalDays = 31;\n                break;\n            case 4:\n            case 6:\n            case 9:\n            case 11:\n                totalDays = 30;\n                break;\n            case 2:\n                totalDays = (year % 4 == 0) ? 29 : 28;\n                break;\n            default:\n                totalDays = 0;\n                break;\n        }\n        return totalDays\n    }\n\n    getYear() {\n        let y = new Date();\n        return y.getFullYear();\n    }\n\n    getYears() {\n        let years = [];\n        for(var i = 1950; i <= 2080; i++) {\n            years.push(Number(i));\n        }\n        return years;\n    }\n\n    getDateFormatted(date: any, format: any) {\n        return moment(date).format(format);\n    }\n\n    getDateMoment(date: any) {\n        return moment(date);\n    }\n\n    getMonth() {\n        let y = new Date();\n        let m = Number(y.getMonth()) + 1;\n        return m;\n    }\n\n}","import { Component, OnInit, ViewChild, ElementRef, Input, Output, EventEmitter, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\nimport { DatepickerService } from './datepicker.service';\n\n@Component({\n  selector: 'anglar-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: DatepickerComponent,\n    multi: true\n  }]\n})\nexport class DatepickerComponent implements OnInit, ControlValueAccessor, OnDestroy {\n  constructor(\n    public datePickerService: DatepickerService,\n    public changeDetect: ChangeDetectorRef) { }\n\n  @Input('position') position: string = 'bottom';\n  @Input('dateFormat') dateFormat: string = 'DD-MMM-YYYY';\n  pickerHeight: number = 500;\n\n  @Output() onDateSelect:any = new EventEmitter();\n  \n  @ViewChild('pickerCompRef') pickerCompRef: ElementRef;\n  @ViewChild('pickerInput') pickerInput: ElementRef;\n  \n  elementTop: any;\n  elementLeft: any;\n  inputOffset: number = 26;\n  positioned: boolean = false;\n\n  hide: boolean = true;\n  items: any;\n  dateComposer: any;\n  months: any;\n  month: number;\n  year: any;\n  years: any;\n\n\n  myInput: any = '';\n  onChange;\n  onBlur;\n  ngOnInit() {\n    this.items = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n    this.months = this.datePickerService.getMonths();\n    this.years = this.datePickerService.getYears();\n    this.year = this.datePickerService.getYear();\n    this.month = this.datePickerService.getMonth();\n    this.genCalendarView();\n    document.body.appendChild(this.pickerCompRef.nativeElement);\n    this.detectChanges();\n  }\n\n  positionBody() {\n    if(!this.positioned) {\n      this.positionElement();\n    }\n    this.openPicker();\n  }\n\n  /**\n   * This is where the values updated in view in parent component gets updated in the child component here\n   * @param myInput \n   */\n  writeValue(myInput: any): void {\n    this.myInput = myInput;\n    this.detectChanges();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onBlur = fn;\n  }\n\n  positionElement() {\n    let dropdownItem = this.pickerCompRef.nativeElement;\n    dropdownItem['style']['top'] = this.elementTop + 'px';\n    dropdownItem['style']['left'] = this.elementLeft + 'px';\n    this.positioned = true;\n  }\n\n  getPosition() {\n    let rect = this.pickerInput.nativeElement.getBoundingClientRect();\n    let scrollTop = document.documentElement.scrollTop ?\n      document.documentElement.scrollTop : document.body.scrollTop;\n    let scrollLeft = document.documentElement.scrollLeft ?\n      document.documentElement.scrollLeft : document.body.scrollLeft;\n    this.elementTop = rect.top + scrollTop;\n    this.elementLeft = rect.left + scrollLeft;\n    switch(this.position) {\n      case 'left':\n        this.elementLeft -= 300;\n        this.elementTop -= this.inputOffset - 20;\n      break;\n      case 'right':\n        this.elementLeft += 200;\n        this.elementTop -= this.inputOffset - 20;\n      break;\n      case 'top':\n        this.elementTop -= 273;\n      break;\n      case 'bottom':\n      default:\n      this.elementTop += this.inputOffset;\n      break;\n    }\n  }\n\n  ngOnDestroy() {\n    this.pickerCompRef.nativeElement.outerHTML = '';\n  }\n\n  onDateSelection(day: any) {\n    if(day < 10) {\n      day = '0'+day;\n    }\n    let month: any = this.month;\n    if(this.month < 10) {\n      month = '0'+this.month;\n    }\n    let selectedDate = this.year + '-' + month + '-' + day;\n    let dateObj =  {\n      formattedDate: this.datePickerService.getDateFormatted(selectedDate, this.dateFormat),\n      dateObject: this.datePickerService.getDateMoment(selectedDate)\n    };\n    this.myInput = dateObj.formattedDate;\n    this.onChange(this.myInput);\n    this.onDateSelect.emit(dateObj.dateObject);\n    this.closePicker();\n  }\n\n  genCalendarView() {\n    try {\n      let startDay = this.datePickerService.generateMonthDate(this.month, this.year);\n      let lastDay = this.datePickerService.getMonthDates(this.month, this.year);\n      try {\n        this.dateComposer = this.datePickerService.dateComposer(startDay, lastDay);\n        this.detectChanges();\n      } catch (e) {\n        console.error(e);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  gotoPrevMonth() {\n    if( Number(this.month) === 1) {\n        this.month = 12;\n        this.year--;\n    } else {\n      this.month--;\n    }    \n  }\n\n  gotoNextMonth() {\n    if( Number(this.month) === 12) {\n        this.month = 1;\n        this.year++;\n    } else {\n      this.month++;\n    }\n  }\n\n  openPicker() {\n    this.hide = false;\n    this.detectChanges();\n  }\n\n  closePicker() {\n    this.hide = true;\n    this.detectChanges();\n  }\n\n  detectChanges() {\n    this.changeDetect.detectChanges();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { DatepickerComponent } from './datepicker.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common'; \n@NgModule({\n  declarations: [DatepickerComponent],\n  imports: [\n    FormsModule, ReactiveFormsModule, CommonModule\n  ],\n  exports: [DatepickerComponent]\n})\nexport class AngularDatepickerModule { }\n"]}